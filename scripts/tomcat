#!/bin/bash
# This script has been generated by Chef. If you change it by hand, don't be shocked when it changes back.
### BEGIN INIT INFO
# Provides:          tomcat6
# Required-Start:    $local_fs $remote_fs $network $time $named
# Should-Start: $time sendmail
# Required-Stop:     $local_fs $remote_fs $network $time $named
# Should-Stop: $time sendmail
# Default-Start:     3 5
# Default-Stop:      0 1 2 6
# Short-Description: tomcat6 installed by Chef
# Description:
### END INIT INFO
#

## Source function library.
#. /etc/rc.d/init.d/functions
export JAVA_HOME="/opt/java"
#export JAVA_OPTS="-Xmx512m -XX:MaxPermSize=128m -Djava.awt.headless=true $JAVA_OPTS  -Dspt.log.dir=/var/logs/sptadm/ftdaas -Denable.master=true -Dsolr.solr.home=/opt/solr/solr-home -Dspt.foundation.solr.config=/opt/solr/conf/indexing.properties -Xms256m -Xmx4096m -XX:PermSize=128m -XX:MaxPermSize=512m -Denv.config.file=/opt/daas/conf/env-config.xml -Dlog4j.configuration=file:/opt/daas/conf/log4j.xml "
export JAVA_OPTS="-Xmx512m -XX:MaxPermSize=128m -Djava.awt.headless=true $JAVA_OPTS  -Dspt.log.dir=/var/logs/sptadm/ftdaas -Denable.master=true -Dsolr.solr.home=/opt/solr/solr-home -Dspt.foundation.solr.config=/opt/solr/conf/indexing.properties -Xms256m -Xmx4096m -XX:PermSize=128m -XX:MaxPermSize=512m -Denv.config.file=/opt/daas/conf/env-config.xml -Dlog4j.configuration=file:/opt/daas/conf/log4j.xml"
export PATH=$JAVA_HOME/bin:$PATH
echo "path variable is set to $PATH"
export CATALINA_OPTS="-Dcom.sun.management.jmxremote.port=1099 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false"
TOMCAT_HOME=/opt/tomcat
SHUTDOWN_WAIT=20

userCheck(){
	# Check for valid user
    USER=`whoami`
    if [ "$USER" == "sptadm" ] || [ "$USER" == root ] ; then
    	echo -e "\n #current user: $USER can process the tomcat service"
    else
       echo -e "\n #  This script must be run by tomcat or root. You are ${USER}."
       exit 1
    fi      
}

tomcat_pid() {
  echo `ps aux | grep org.apache.catalina.startup.Bootstrap | grep '/opt/tomcat ' | grep -v grep | awk '{ print $2
  }'`
}

start() {
  userCheck
  pid=$(tomcat_pid)
  if [ -n "$pid" ] 
  then
    echo "Tomcat is already running (pid: $pid)"
  else
    # Start tomcat
    echo "Starting tomcat"
    ulimit -n 100000
    #umask 007
    /bin/su sptadm -c "/bin/sh ${TOMCAT_HOME}/bin/startup.sh"
  fi


  return 0
}

stop() {
  userCheck
  pid=$(tomcat_pid)
  if [ -n "$pid" ]
  then
    echo "Stopping Tomcat"
    /bin/su sptadm -c "/bin/sh ${TOMCAT_HOME}/bin/shutdown.sh"
	
    let kwait=$SHUTDOWN_WAIT
    count=0;
    until [ `ps -p $pid | grep -c $pid` = '0' ] || [ $count -gt $kwait ]
    do
      echo -n -e "\nwaiting for processes to exit";
      sleep 1
      let count=$count+1;
    done

    if [ $count -gt $kwait ]; then
      echo -n -e "\nkilling processes which didn't stop after $SHUTDOWN_WAIT seconds"
      kill -9 $pid
    fi
  else
    echo "Tomcat is not running"
  fi
 
  return 0
}

case $1 in
start)
  start
;; 
stop)   
  stop
;; 
restart)
  stop
  start
;;
status)
  pid=$(tomcat_pid)
  if [ -n "$pid" ]
  then
    echo "Tomcat is running with pid: $pid"
  else
    echo "Tomcat is not running"
    exit 1
  fi
;; 
esac    
exit 0
