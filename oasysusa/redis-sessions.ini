[app:redis_beaker_sessions_configuration]
use = egg:oasysusa
# session settings
redis.sessions.secret = your_cookie_signing_secret
redis.sessions.timeout = 1200

# session cookie settings
redis.sessions.cookie_name = oasysusa_session
redis.sessions.cookie_max_age = 1200
redis.sessions.cookie_path = /
redis.sessions.cookie_domain =
redis.sessions.cookie_secure = False
redis.sessions.cookie_httponly = False
redis.sessions.cookie_on_exception = True

# you can supply a redis connection string as a URL
#redis.sessions.url = redis://username:password@localhost:6379/0

# or as individual settings (note: the URL gets preference if you do both)
redis.sessions.host = localhost
redis.sessions.port = 6379
redis.sessions.db = 0
redis.sessions.password = None

# additional options can be supplied to redis-py's StrictRedis
redis.sessions.socket_timeout = 1200
redis.sessions.connection_pool =
redis.sessions.charset = utf-8
redis.sessions.errors = strict
redis.sessions.unix_socket_path =

# in the advanced section we'll cover how to instantiate your own client
#redis.sessions.client_callable = my.dotted.python.callable

# along with defining your own serialize and deserialize methods
#redis.sessions.serialize = cPickle.dumps
#redis.sessions.deserialize = cPickle.loads

# you can specify a prefix to be used with session keys in redis
#redis.sessions.prefix = mycoolprefix

# or you can supply your own UID generator callable for session keys
#redis.sessions.id_generator = niftyuid
